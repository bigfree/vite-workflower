[{"/vite/src/main.tsx":"1","/vite/src/App.tsx":"2","/vite/src/store/store.ts":"3","/vite/src/store/playground/playgroundSlice.ts":"4","/vite/src/playground/Test.component.tsx":"5","/vite/src/store/hooks.ts":"6","/vite/src/store/persist/persist.ts":"7"},{"size":529,"mtime":1666360630899,"results":"8","hashOfConfig":"9"},{"size":221,"mtime":1666355889134,"results":"10","hashOfConfig":"9"},{"size":1222,"mtime":1666362039906,"results":"11","hashOfConfig":"9"},{"size":1013,"mtime":1666358895714,"results":"12","hashOfConfig":"9"},{"size":1310,"mtime":1666359175585,"results":"13","hashOfConfig":"9"},{"size":266,"mtime":1666354499350,"results":"14","hashOfConfig":"9"},{"size":684,"mtime":1666361993542,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"16wrczi",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/vite/src/main.tsx",[],[],[],"/vite/src/App.tsx",[],[],"/vite/src/store/store.ts",[],[],"/vite/src/store/playground/playgroundSlice.ts",[],[],"/vite/src/playground/Test.component.tsx",[],[],"/vite/src/store/hooks.ts",[],[],[],"/vite/src/store/persist/persist.ts",["39"],[],{"ruleId":"40","severity":1,"message":"41","line":7,"column":40,"nodeType":"42","messageId":"43","endLine":7,"endColumn":43,"suggestions":"44"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["45","46"],{"messageId":"47","fix":"48","desc":"49"},{"messageId":"50","fix":"51","desc":"52"},"suggestUnknown",{"range":"53","text":"54"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"53","text":"55"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[252,255],"unknown","never"]